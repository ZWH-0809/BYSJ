* Checking out Math-95 to /scratch/acp13jcd/run_gzoltar_10875_Math-95
* Compiling Math-95
Running ant (compile)...................................................... OK
Running ant (compile.tests)................................................ OK
* Running GZoltar
   ____ _____     _ _               
  / ___|__  /___ | | |_ __ _ _ __   
 | |  _  / // _ \| | __/ _` | '__| 
 | |_| |/ /| (_) | | || (_| | |     
  \____/____\___/|_|\__\__,_|_| 

* Preparing classpath
* Collecting classes under test
* Collecting test cases
* Performing analysis
* Started org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaTest
* Finished org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaTest
* Started org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaFValue
* Finished org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaFValue
* Started org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaPValue
* Finished org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaPValue
* Started org.apache.commons.math.stat.inference.TestUtilsTest#testOneSampleTTest
* Finished org.apache.commons.math.stat.inference.TestUtilsTest#testOneSampleTTest
* Started org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareIndependence
* Finished org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareIndependence
* Started org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareZeroCount
* Finished org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareZeroCount
* Started org.apache.commons.math.stat.inference.TestUtilsTest#testSmallSamples
* Finished org.apache.commons.math.stat.inference.TestUtilsTest#testSmallSamples
* Started org.apache.commons.math.stat.inference.TestUtilsTest#testTwoSampleTHeterscedastic
* Finished org.apache.commons.math.stat.inference.TestUtilsTest#testTwoSampleTHeterscedastic
* Started org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareLargeTestStatistic
* Finished org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareLargeTestStatistic
* Started org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquare
* Finished org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquare
* Started org.apache.commons.math.stat.inference.TestUtilsTest#testOneSampleT
* Finished org.apache.commons.math.stat.inference.TestUtilsTest#testOneSampleT
* Started org.apache.commons.math.stat.inference.TestUtilsTest#testPaired
* Finished org.apache.commons.math.stat.inference.TestUtilsTest#testPaired
* Started org.apache.commons.math.stat.inference.TestUtilsTest#testTwoSampleTHomoscedastic
* Finished org.apache.commons.math.stat.inference.TestUtilsTest#testTwoSampleTHomoscedastic
* Started org.apache.commons.math.stat.inference.TestUtilsTest#testOneWayAnovaUtils
* Finished org.apache.commons.math.stat.inference.TestUtilsTest#testOneWayAnovaUtils
* Started org.apache.commons.math.distribution.FDistributionTest#testSmallDegreesOfFreedom
* Failure: Invalid endpoint parameters:  lowerBound=0.0 initial=-1.0 upperBound=1.7976931348623157E308 | testSmallDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)
java.lang.IllegalArgumentException: Invalid endpoint parameters:  lowerBound=0.0 initial=-1.0 upperBound=1.7976931348623157E308
	at org.apache.commons.math.analysis.UnivariateRealSolverUtils.bracket(UnivariateRealSolverUtils.java:179)
	at org.apache.commons.math.analysis.UnivariateRealSolverUtils.bracket(UnivariateRealSolverUtils.java:128)
	at org.apache.commons.math.distribution.AbstractContinuousDistribution.inverseCumulativeProbability(AbstractContinuousDistribution.java:84)
	at org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(FDistributionImpl.java:106)
	at org.apache.commons.math.distribution.FDistributionTest.testSmallDegreesOfFreedom(FDistributionTest.java:114)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at com.gzoltar.lib.instrumentation.testing.junit.a.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)

* Finished org.apache.commons.math.distribution.FDistributionTest#testSmallDegreesOfFreedom
* Started org.apache.commons.math.distribution.FDistributionTest#testCumulativeProbabilityExtremes
* Finished org.apache.commons.math.distribution.FDistributionTest#testCumulativeProbabilityExtremes
* Started org.apache.commons.math.distribution.FDistributionTest#testLargeDegreesOfFreedom
* Finished org.apache.commons.math.distribution.FDistributionTest#testLargeDegreesOfFreedom
* Started org.apache.commons.math.distribution.FDistributionTest#testDfAccessors
* Finished org.apache.commons.math.distribution.FDistributionTest#testDfAccessors
* Started org.apache.commons.math.distribution.FDistributionTest#testInverseCumulativeProbabilityExtremes
* Finished org.apache.commons.math.distribution.FDistributionTest#testInverseCumulativeProbabilityExtremes
* Started org.apache.commons.math.distribution.FDistributionTest#testInverseCumulativeProbabilities
* Finished org.apache.commons.math.distribution.FDistributionTest#testInverseCumulativeProbabilities
* Started org.apache.commons.math.distribution.FDistributionTest#testCumulativeProbabilities
* Finished org.apache.commons.math.distribution.FDistributionTest#testCumulativeProbabilities
* Started org.apache.commons.math.distribution.FDistributionTest#testIllegalArguments
* Finished org.apache.commons.math.distribution.FDistributionTest#testIllegalArguments
* Started org.apache.commons.math.distribution.FDistributionTest#testConsistency
* Finished org.apache.commons.math.distribution.FDistributionTest#testConsistency
* Filtering test cases that do not cover any component
* Sending data to master
* Closing connection with client
* Performing fault localization
* Running Ochiai
* Running Ochiai2
* Running Tarantula
* Running Jaccard
* Running SBI
* Running Kulczynski2
* Running Sorensen-Dice
* Running Anderberg
* Running Simple-matching
* Running Rogers and Tanimoto
* Running Russel and Rao
* Running Dstar
* Running Opt
* Running Barinel
* Running Ideal
* Running Naish1
* Writing coverage matrix to '/fastdata/acp13jcd/GZoltar/Math/95/Math/developer/0/Math-95b-developer.0/matrix'
* Normalizing spectra, coefficient: DSTAR
* Normalizing spectra, coefficient: OPT
* Writing spectra to '/fastdata/acp13jcd/GZoltar/Math/95/Math/developer/0/Math-95b-developer.0/spectra'
* Metrics
* Writing statistics to '/fastdata/acp13jcd/GZoltar/Math/95/Math/developer/0/Math-95b-developer.0/statistics.csv'
* Computation finished

DONE!
